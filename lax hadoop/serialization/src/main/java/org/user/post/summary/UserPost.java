/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.user.post.summary;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserPost extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserPost\",\"namespace\":\"org.user.post.summary\",\"fields\":[{\"name\":\"post_date\",\"type\":\"string\"},{\"name\":\"post_count\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence post_date;
  @Deprecated public int post_count;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UserPost() {}

  /**
   * All-args constructor.
   */
  public UserPost(java.lang.CharSequence post_date, java.lang.Integer post_count) {
    this.post_date = post_date;
    this.post_count = post_count;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return post_date;
    case 1: return post_count;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: post_date = (java.lang.CharSequence)value$; break;
    case 1: post_count = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'post_date' field.
   */
  public java.lang.CharSequence getPostDate() {
    return post_date;
  }

  /**
   * Sets the value of the 'post_date' field.
   * @param value the value to set.
   */
  public void setPostDate(java.lang.CharSequence value) {
    this.post_date = value;
  }

  /**
   * Gets the value of the 'post_count' field.
   */
  public java.lang.Integer getPostCount() {
    return post_count;
  }

  /**
   * Sets the value of the 'post_count' field.
   * @param value the value to set.
   */
  public void setPostCount(java.lang.Integer value) {
    this.post_count = value;
  }

  /** Creates a new UserPost RecordBuilder */
  public static org.user.post.summary.UserPost.Builder newBuilder() {
    return new org.user.post.summary.UserPost.Builder();
  }
  
  /** Creates a new UserPost RecordBuilder by copying an existing Builder */
  public static org.user.post.summary.UserPost.Builder newBuilder(org.user.post.summary.UserPost.Builder other) {
    return new org.user.post.summary.UserPost.Builder(other);
  }
  
  /** Creates a new UserPost RecordBuilder by copying an existing UserPost instance */
  public static org.user.post.summary.UserPost.Builder newBuilder(org.user.post.summary.UserPost other) {
    return new org.user.post.summary.UserPost.Builder(other);
  }
  
  /**
   * RecordBuilder for UserPost instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserPost>
    implements org.apache.avro.data.RecordBuilder<UserPost> {

    private java.lang.CharSequence post_date;
    private int post_count;

    /** Creates a new Builder */
    private Builder() {
      super(org.user.post.summary.UserPost.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.user.post.summary.UserPost.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.post_date)) {
        this.post_date = data().deepCopy(fields()[0].schema(), other.post_date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.post_count)) {
        this.post_count = data().deepCopy(fields()[1].schema(), other.post_count);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UserPost instance */
    private Builder(org.user.post.summary.UserPost other) {
            super(org.user.post.summary.UserPost.SCHEMA$);
      if (isValidValue(fields()[0], other.post_date)) {
        this.post_date = data().deepCopy(fields()[0].schema(), other.post_date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.post_count)) {
        this.post_count = data().deepCopy(fields()[1].schema(), other.post_count);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'post_date' field */
    public java.lang.CharSequence getPostDate() {
      return post_date;
    }
    
    /** Sets the value of the 'post_date' field */
    public org.user.post.summary.UserPost.Builder setPostDate(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.post_date = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'post_date' field has been set */
    public boolean hasPostDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'post_date' field */
    public org.user.post.summary.UserPost.Builder clearPostDate() {
      post_date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'post_count' field */
    public java.lang.Integer getPostCount() {
      return post_count;
    }
    
    /** Sets the value of the 'post_count' field */
    public org.user.post.summary.UserPost.Builder setPostCount(int value) {
      validate(fields()[1], value);
      this.post_count = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'post_count' field has been set */
    public boolean hasPostCount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'post_count' field */
    public org.user.post.summary.UserPost.Builder clearPostCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public UserPost build() {
      try {
        UserPost record = new UserPost();
        record.post_date = fieldSetFlags()[0] ? this.post_date : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.post_count = fieldSetFlags()[1] ? this.post_count : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
